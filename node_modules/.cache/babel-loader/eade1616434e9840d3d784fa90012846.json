{"ast":null,"code":"var _jsxFileName = \"F:\\\\Work\\\\JavaScript\\\\React\\\\Portfolio\\\\kantahusari.github.io\\\\src\\\\Component\\\\Pages\\\\Day\\\\View.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable no-unreachable */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from 'universal-cookie';\nimport moment from \"moment\";\nimport \"./View.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function View() {\n  _s();\n\n  const history = useHistory();\n  const cookie = new Cookies();\n  const all = cookie.getAll();\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const priority = [\"Important\", \"Normal\"];\n  const status = [\"Pending\", \"Complete\"];\n  const [pagereloader, setpagereloader] = useState(false);\n  const [changeStatus, setchangeStatus] = useState(false);\n  const [flush, setflush] = useState(\"\");\n\n  function close() {\n    localStorage.clear();\n    history.push(\"/Calendar\");\n  }\n\n  function show() {\n    const eventToView = JSON.parse(localStorage.getItem('EventToView'));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daybody dayview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logbar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logout\",\n          onClick: () => {\n            close();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: `<--`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dayinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `${months[eventToView.month]}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `${eventToView.day},`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `${eventToView.year}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EventShowArea\",\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legend\",\n            children: \"Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Text\",\n            children: eventToView.topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legend\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"timeLabel\",\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"LabelText\",\n              children: `${eventToView.fromhour}:${eventToView.fromminute}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 71\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"timeLabel\",\n              children: \"To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"LabelText\",\n              children: `${eventToView.tohour}:${eventToView.tominute}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legend\",\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Text\",\n            children: eventToView.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legend\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Text\",\n            children: eventToView.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legend\",\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Text\",\n            children: priority[eventToView.priority]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldSet\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legend\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Text\",\n            children: status[eventToView.status]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  function hide() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Acces Forbidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this);\n  }\n\n  function checkStatus() {\n    setTimeout(() => {\n      setchangeStatus(!changeStatus);\n    }, 500);\n\n    if (all.hasOwnProperty(\"admin\")) {\n      setpagereloader(true);\n    } else {\n      setpagereloader(false);\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      checkStatus();\n    }, 500);\n    return () => {\n      setflush({});\n    };\n  }, [changeStatus]);\n\n  switch (pagereloader) {\n    case true:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: show()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 20\n      }, this);\n      break;\n\n    case false:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hide()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 20\n      }, this);\n      break;\n\n    default:\n      return null;\n  }\n}\n\n_s(View, \"Ucb1Z4fAf9jx8QFikuk2d5C2pLs=\", false, function () {\n  return [useHistory];\n});\n\n_c = View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["F:/Work/JavaScript/React/Portfolio/kantahusari.github.io/src/Component/Pages/Day/View.js"],"names":["React","useState","useEffect","useHistory","Cookies","moment","View","history","cookie","all","getAll","months","priority","status","pagereloader","setpagereloader","changeStatus","setchangeStatus","flush","setflush","close","localStorage","clear","push","show","eventToView","JSON","parse","getItem","month","day","year","topic","fromhour","fromminute","tohour","tominute","notes","description","hide","checkStatus","setTimeout","hasOwnProperty"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unreachable */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport moment from \"moment\"\r\nimport \"./View.css\"\r\n\r\nexport default function View() {\r\n    const history = useHistory()\r\n    const cookie = new Cookies()\r\n    const all = cookie.getAll()\r\n\r\n\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ]\r\n\r\n    const priority = [\r\n        \"Important\",\r\n        \"Normal\",\r\n    ]\r\n\r\n    const status = [\r\n        \"Pending\",\r\n        \"Complete\",\r\n    ]\r\n\r\n    const [pagereloader, setpagereloader] = useState(false)\r\n    const [changeStatus, setchangeStatus] = useState(false)\r\n    const [flush, setflush] = useState(\"\")\r\n\r\n\r\n    function close() {\r\n        localStorage.clear()\r\n        history.push(\"/Calendar\")\r\n    }\r\n\r\n    function show() {\r\n        const eventToView = JSON.parse(localStorage.getItem('EventToView'))\r\n        return (\r\n            <div className=\"daybody dayview\">\r\n\r\n                <div className=\"logbar\" >\r\n                    <div className=\"logout\"\r\n                        onClick={\r\n                            () => {\r\n                                close()\r\n                            }\r\n                        }\r\n                    >\r\n                        <h1>{`<--`}</h1>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dayinfo\">\r\n                    <h1>{`${months[eventToView.month]}`}</h1>\r\n                    <h1>{`${eventToView.day},`}</h1>\r\n                    <h1>{`${eventToView.year}`}</h1>\r\n                </div>\r\n\r\n                <div className=\"EventShowArea\">\r\n\r\n                    <fieldset className=\"fieldSet\">\r\n                        <legend className=\"legend\">Topic</legend>\r\n                        <h3 className=\"Text\">\r\n                            {eventToView.topic}\r\n                        </h3>\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"fieldSet\">\r\n                        <legend className=\"legend\">Time</legend>\r\n                        <div className=\"label1\">\r\n                            <label className=\"timeLabel\">From:</label><h1 className=\"LabelText\">{`${eventToView.fromhour}:${eventToView.fromminute}`}</h1>\r\n                        </div>\r\n                        <div className=\"label2\">\r\n                            <label className=\"timeLabel\">To:</label><h1 className=\"LabelText\">{`${eventToView.tohour}:${eventToView.tominute}`}</h1>\r\n                        </div>\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"fieldSet\">\r\n                        <legend className=\"legend\">Notes</legend>\r\n                        <h3 className=\"Text\">\r\n                            {eventToView.notes}\r\n                        </h3>\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"fieldSet\">\r\n                        <legend className=\"legend\">Description</legend>\r\n                        <h3 className=\"Text\">\r\n                            {eventToView.description}\r\n                        </h3>\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"fieldSet\">\r\n                        <legend className=\"legend\">Priority</legend>\r\n                        <h3 className=\"Text\">\r\n                            {priority[eventToView.priority]}\r\n                        </h3>\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"fieldSet\">\r\n                        <legend className=\"legend\">Status</legend>\r\n                        <h3 className=\"Text\">\r\n                            {status[eventToView.status]}\r\n                        </h3>\r\n                    </fieldset>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    function hide() {\r\n        return (<div>Acces Forbidden</div>)\r\n    }\r\n\r\n    function checkStatus() {\r\n        setTimeout(() => {\r\n            setchangeStatus(!changeStatus)\r\n        }, 500);\r\n        if (all.hasOwnProperty(\"admin\")) {\r\n            setpagereloader(true);\r\n        } else {\r\n            setpagereloader(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            checkStatus();\r\n        }, 500);\r\n        return () => {\r\n            setflush({})\r\n        };\r\n    }, [changeStatus]);\r\n\r\n    switch (pagereloader) {\r\n        case true:\r\n            return <div>{show()}</div>;\r\n            break;\r\n        case false:\r\n            return <div>{hide()}</div>;\r\n            break;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}