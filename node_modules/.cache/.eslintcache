[{"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\index.js":"1","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\reportWebVitals.js":"2","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\App.js":"3","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Resume\\Resume.js":"4","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Home\\Home.js":"5","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Services.js":"6","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\FooterBar\\FooterBar.js":"7","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\InfoBar\\InfoBar.js":"8","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\TopNav\\TopNav.js":"9","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Body\\Body.js":"10","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Options\\Desktop.js":"11","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Options\\Mobile.js":"12","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Options\\Website.js":"13","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Options\\Database.js":"14","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Body\\Projects\\Projects.js":"15","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Body\\Skills\\Skills.js":"16","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Body\\ContactMe\\ContactMe.js":"17","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Login\\Login.js":"18","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Calendar\\Calendar.js":"19","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Day\\Day.js":"20","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Day\\AddEvent.js":"21"},{"size":259,"mtime":1630558245711,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1626589714233,"results":"24","hashOfConfig":"23"},{"size":1523,"mtime":1632884193362,"results":"25","hashOfConfig":"23"},{"size":14308,"mtime":1631415110868,"results":"26","hashOfConfig":"23"},{"size":422,"mtime":1630357748154,"results":"27","hashOfConfig":"23"},{"size":10561,"mtime":1630590930157,"results":"28","hashOfConfig":"23"},{"size":4337,"mtime":1629602385656,"results":"29","hashOfConfig":"23"},{"size":3699,"mtime":1630804415369,"results":"30","hashOfConfig":"23"},{"size":4218,"mtime":1632727554554,"results":"31","hashOfConfig":"23"},{"size":870,"mtime":1630558845408,"results":"32","hashOfConfig":"23"},{"size":6850,"mtime":1630804478483,"results":"33","hashOfConfig":"23"},{"size":17625,"mtime":1630804484519,"results":"34","hashOfConfig":"23"},{"size":25595,"mtime":1630804580368,"results":"35","hashOfConfig":"23"},{"size":15369,"mtime":1630804471700,"results":"36","hashOfConfig":"23"},{"size":8538,"mtime":1630357377338,"results":"37","hashOfConfig":"23"},{"size":24212,"mtime":1630559998985,"results":"38","hashOfConfig":"23"},{"size":6798,"mtime":1630804263683,"results":"39","hashOfConfig":"23"},{"size":3891,"mtime":1632881311674,"results":"40","hashOfConfig":"23"},{"size":9644,"mtime":1632988373861,"results":"41","hashOfConfig":"23"},{"size":2573,"mtime":1632988477353,"results":"42","hashOfConfig":"23"},{"size":8066,"mtime":1633060736364,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pd9zaq",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\index.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\reportWebVitals.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\App.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Resume\\Resume.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Home\\Home.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Services.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\FooterBar\\FooterBar.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\InfoBar\\InfoBar.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\TopNav\\TopNav.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Body\\Body.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Options\\Desktop.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Options\\Mobile.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Options\\Website.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Services\\Options\\Database.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Body\\Projects\\Projects.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Body\\Skills\\Skills.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Body\\ContactMe\\ContactMe.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Login\\Login.js",[],"D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Calendar\\Calendar.js",["89","90","91","92","93"],"/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unreachable */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport \"./Calendar.css\"\r\nimport moment from \"moment\"\r\n\r\n\r\nexport default function Calendar() {\r\n    const history = useHistory()\r\n    localStorage.clear()\r\n    const cookie = new Cookies()\r\n    const all = cookie.getAll()\r\n    const [pagereloader, setpagereloader] = useState(false)\r\n    const [changeStatus, setchangeStatus] = useState(false)\r\n    const [flush, setflush] = useState(\"\")\r\n\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ]\r\n\r\n    /*\r\n    get:\r\n\r\n    moment().get('year');\r\n    moment().get('month');\r\n    moment().get('date');\r\n    \r\n    \r\n    */\r\n\r\n    /*\r\n    set:\r\n    moment().set('year', 2013);\r\n    moment().set('month', 3);  // April\r\n    moment().set('date', 1);\r\n    \r\n    \r\n    */\r\n    // const time = moment()\r\n    const [time, settime] = useState(moment())\r\n    const [todayInfo, settodayInfo] = useState(`${months[moment().get('month')]}, ${moment().get('date')}`)\r\n    // console.log(time)\r\n    const [currentYear, setcurrentYear] = useState(time.get('year'))\r\n    const [currentMonth, setcurrentMonth] = useState(time.get('month'))\r\n    const [currentDay, setcurrentDay] = useState(time.get('date'))\r\n\r\n    const [startOfMonth, setstartOfMonth] = useState(time.startOf('month').get('date'))\r\n    const [endOfMonth, setendOfMonth] = useState(time.endOf('month').get('date'))\r\n\r\n    const [firstOfMonthINdex, setfirstOfMonthINdex] = useState(time.startOf('month').weekday())\r\n    const [endOfMonthIndex, setendOfMonthIndex] = useState(time.endOf('month').weekday())\r\n    //console.log(\"initial:\")\r\n    //console.log(currentYear, currentMonth, currentDay, startOfMonth, endOfMonth, firstOfMonthINdex, endOfMonthIndex)//before changes\r\n\r\n    function changedate(a) {\r\n        function setNewDate() {\r\n            settime(time.add(a, 'months'))\r\n        }\r\n        var p1 = new Promise((resolve, reject) => {\r\n            resolve(setNewDate());\r\n        });\r\n        p1.then(\r\n            setcurrentYear(time.get('year')),\r\n            setcurrentMonth(time.get('month')),\r\n            setcurrentDay(time.get('date')),\r\n            setstartOfMonth(time.startOf('month').get('date')),\r\n            setendOfMonth(time.endOf('month').get('date')),\r\n\r\n            setfirstOfMonthINdex(time.startOf('month').weekday()),\r\n            setendOfMonthIndex(time.endOf('month').weekday())\r\n        )\r\n    }\r\n\r\n    function onDayClick(day) {\r\n        const dayinfo = {\r\n            \"day\": day,\r\n            \"month\": currentMonth,\r\n            \"year\": currentYear\r\n        }\r\n        // localStorage.setItem('day', JSON.stringify(dayinfo));\r\n        localStorage.setItem('day', dayinfo.day);\r\n        localStorage.setItem('month', dayinfo.month);\r\n        localStorage.setItem('year', dayinfo.year);\r\n        history.push(\"/Calendar/Day\")\r\n    }\r\n    function renderdaysofthemonth() {\r\n        let days = []\r\n        let num = 0\r\n        for (let i = 0; i < 6; i++) {\r\n            let week = []\r\n            if (i === 0) {\r\n                for (let j = 0; j < 7; j++) {\r\n                    if (j < firstOfMonthINdex) {\r\n                        week.push(\"\")\r\n                    } else {\r\n                        num++\r\n\r\n                        week.push(num)\r\n                    }\r\n                }\r\n            } else {\r\n                for (let j = 0; j < 7; j++) {\r\n                    if (num >= endOfMonth) {\r\n                        week.push(\"\")\r\n                    } else {\r\n                        num++\r\n                        week.push(num)\r\n                    }\r\n                }\r\n            }\r\n            days.push(week)\r\n        }\r\n        function changevalue(value, index) {\r\n            if (value === \"\") {\r\n                return <td\r\n                    key={index}\r\n                    style={{\r\n                        backgroundColor: \"#494b66\"\r\n                    }}\r\n                >\r\n                    {value}</td>\r\n            } else {\r\n                if (value === moment().get('date')) {\r\n                    return <td\r\n                        style={{\r\n                            backgroundColor: \"#075de8\",\r\n                            color: \"white\",\r\n                            cursor: \"pointer\",\r\n                            border: \"1px solid black\",\r\n                        }}\r\n                        key={index}\r\n                        onClick={() => {\r\n                            onDayClick(value)\r\n                        }}>{value}</td>\r\n                } else {\r\n                    return <td\r\n                        style={{\r\n                            cursor: \"pointer\",\r\n                            border: \"1px solid black\",\r\n                        }}\r\n                        key={index}\r\n                        onClick={() => {\r\n                            onDayClick(value)\r\n                        }}>{value}</td>\r\n                }\r\n            }\r\n        }\r\n        var finalDays = days.map(subarray => subarray.map(changevalue))\r\n        return finalDays\r\n\r\n    }\r\n\r\n    function logout() {\r\n        cookie.remove(\"admin\")\r\n        history.push(\"/\")\r\n    }\r\n\r\n    function show() {\r\n        return (\r\n            <div className=\"allpage\">\r\n                <div className=\"logbar\" >\r\n                    <div className=\"logout\"\r\n                        onClick={\r\n                            () => {\r\n                                logout()\r\n                            }\r\n                        }\r\n                    ><h1>Logout</h1></div>\r\n                </div>\r\n                <div className=\"calendarBody\">\r\n                    <div className=\"navigation\">\r\n                        <div className=\"navigationButton\"\r\n                            onClick={\r\n                                () => {\r\n                                    changedate(-1)\r\n                                }\r\n                            }>{`<`}</div>\r\n                        <p className=\"navigationDisplay\">{`${months[currentMonth]}, ${currentYear}`}<br />{todayInfo}</p>\r\n                        <div className=\"navigationButton\"\r\n                            onClick={\r\n                                () => {\r\n                                    changedate(1)\r\n                                }\r\n                            }>{`>`}</div>\r\n                    </div>\r\n\r\n                    <table className=\"calendarTable\">\r\n                        <tbody className=\"calendarTablebody\">\r\n\r\n                            <tr className=\"calendarTableHead\">\r\n                                <th>Sun</th>\r\n                                <th>Mon</th>\r\n                                <th>Tue</th>\r\n                                <th>Wed</th>\r\n                                <th>Thu</th>\r\n                                <th>Fri</th>\r\n                                <th>Sat</th>\r\n                            </tr>\r\n\r\n                            {/*--------ADD DAYS HERE--------*/}\r\n                            <tr className=\"calendarTableData\">\r\n                                {\r\n                                    renderdaysofthemonth()[0]\r\n                                }\r\n                            </tr>\r\n                            <tr className=\"calendarTableData\">\r\n                                {\r\n                                    renderdaysofthemonth()[1]\r\n                                }\r\n                            </tr>\r\n                            <tr className=\"calendarTableData\">\r\n                                {\r\n                                    renderdaysofthemonth()[2]\r\n                                }\r\n                            </tr>\r\n                            <tr className=\"calendarTableData\">\r\n                                {\r\n                                    renderdaysofthemonth()[3]\r\n                                }\r\n                            </tr>\r\n                            <tr className=\"calendarTableData\">\r\n                                {\r\n                                    renderdaysofthemonth()[4]\r\n                                }\r\n                            </tr>\r\n                            <tr className=\"calendarTableData\">\r\n                                {\r\n                                    renderdaysofthemonth()[5]\r\n                                }\r\n                            </tr>\r\n\r\n\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>\r\n                {/* <AddEvent /> */}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function hide() {\r\n        return (<div>Acces Forbidden</div>)\r\n    }\r\n\r\n    function checkStatus() {\r\n        setTimeout(() => {\r\n            setchangeStatus(!changeStatus)\r\n        }, 650);\r\n        if (all.hasOwnProperty(\"admin\")) {\r\n            setpagereloader(true);\r\n        } else {\r\n            setpagereloader(false);\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            checkStatus();\r\n        }, 650);\r\n        return () => {\r\n            setflush({})\r\n        };\r\n    }, [changeStatus]);\r\n\r\n    switch (pagereloader) {\r\n        case true:\r\n            return <div>{show()}</div>;\r\n            break;\r\n        case false:\r\n            return <div>{hide()}</div>;\r\n            break;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Day\\Day.js",["94","95","96","97","98"],"/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unreachable */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport \"./Day.css\"\r\nimport moment from \"moment\"\r\nimport AddEvent from \"./AddEvent\"\r\n\r\nexport default function Day() {\r\n\r\n    const history = useHistory()\r\n    const months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n    ]\r\n\r\n    const [dayDate, setdayDate] = useState([1])\r\n\r\n    function close() {\r\n        localStorage.clear()\r\n        history.push(\"/Calendar\")\r\n    }\r\n\r\n    function renderTable() {\r\n        var hoursTable = []\r\n        var hour = 6\r\n        var index = 1\r\n        for (let i = 0; i < 12; i++) {\r\n            var min = 0\r\n            for (let j = 0; j < 4; j++) {\r\n                hoursTable.push(<tr key={index}><th>{`${hour}:${min}`}</th></tr>)\r\n                index++\r\n                min += 15\r\n            }\r\n            hour++\r\n        }\r\n        return (\r\n            <table className=\"daysTableLeftHead\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>\r\n                            {`task -->`}\r\n                        </th>\r\n                    </tr>\r\n                    {hoursTable}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n\r\n    function DayInformation() {\r\n        if (dayDate.length <= 0) {\r\n            return <>No Info</>\r\n        } else {\r\n            return renderTable()\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"daybody\">\r\n\r\n            <div className=\"logbar\" >\r\n                <div className=\"logout\"\r\n                    onClick={\r\n                        () => {\r\n                            close()\r\n                        }\r\n                    }\r\n                >\r\n                    <h1>{`<--`}</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"dayinfo\">\r\n                <h1>{`${months[localStorage.getItem('month')]}`}</h1>\r\n                <h1>{`${localStorage.getItem('day')},`}</h1>\r\n                <h1>{`${localStorage.getItem('year')}`}</h1>\r\n            </div>\r\n\r\n            <AddEvent />\r\n            \r\n            {/* <div className=\"dayinfoarea\">\r\n                {\r\n                    DayInformation()\r\n                }\r\n            </div> */}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","D:\\Work\\JavaScript\\React\\Portfolio\\kantahusari.github.io\\src\\Component\\Pages\\Day\\AddEvent.js",["99","100","101","102","103","104","105"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from 'universal-cookie';\r\nimport \"./AddEvent.css\"\r\nimport moment from \"moment\"\r\nimport axios from \"axios\"\r\n\r\nexport default function AddEvent() {\r\n    /*\r\n\r\n    day\r\n    fromminute\r\n    tohour\r\n    tominute\r\n    notes\r\n    description\r\n    priority\r\n    status\r\n*/\r\n    const [topic, settopic] = useState(\"\")\r\n    const [year, setyear] = useState(localStorage.getItem(\"year\"))\r\n    const [month, setmonth] = useState(localStorage.getItem(\"month\"))\r\n    const [day, setday] = useState(localStorage.getItem(\"day\"))\r\n    const [fromHour, setfromHour] = useState(\"\")\r\n    const [fromMinute, setfromMinute] = useState(\"\")\r\n    const [toHour, settoHour] = useState(\"\")\r\n    const [toMinute, settoMinute] = useState(\"\")\r\n    const [notes, setnotes] = useState(\"\")\r\n    const [description, setdescription] = useState(\"\")\r\n    const [priority, setpriority] = useState(\"\")\r\n    const [status, setstatus] = useState(\"\")\r\n\r\n    const [error, seterror] = useState(\"\")\r\n\r\n    function renderHours() {\r\n        var hours = []\r\n        var start = 6\r\n        // var key=0\r\n        for (let i = start; i <= 18; i++) {\r\n            hours.push(<option key={i} value={i}>{`${i}`}</option>)\r\n        }\r\n        return hours\r\n    }\r\n    function renderMinutes() {\r\n        var minutes = []\r\n        var start = 0\r\n        // var key=0\r\n        for (let i = start; i < 4; i++) {\r\n            minutes.push(<option key={i} value={start}>{`${start}`}</option>)\r\n            start += 15\r\n        }\r\n        return minutes\r\n    }\r\n\r\n    function submitEvent() {\r\n\r\n        if (topic === \"\" || fromHour === \"\" || fromMinute === \"\" || toHour === \"\" || toMinute === \"\" || notes === \"\" || description === \"\" || priority === \"\" || status === \"\") {\r\n            seterror(\"Empty Fields\")\r\n        } else {\r\n            //to: hours must be greater than or equal to the from hours, minutes must be greater\r\n            if (toHour >= fromHour && toMinute > fromMinute) {\r\n                console.log(\"correct time\")\r\n                //here do the code of the condition is met !!!\r\n                //------------------------------------------\r\n                //collect data\r\n                const Dayevent = {\r\n                    topic: topic,\r\n                    year: year,\r\n                    month: month,\r\n                    day: day,\r\n                    fromHour: fromHour,\r\n                    fromMinute: fromMinute,\r\n                    toHour: toHour,\r\n                    toMinute: toMinute,\r\n                    notes: notes,\r\n                    description: description,\r\n                    priority: priority,\r\n                    status: status,\r\n                }\r\n                //make sure\r\n                console.log(Dayevent)\r\n                //send the request !!!\r\n                axios.post(\"https://appzero0.herokuapp.com/admin/addEvent\", Dayevent).then(res => {\r\n                    if (res.data.errors === null || res.data.errors === undefined) {\r\n                        console.log(res.data)\r\n                        settopic(\"\")\r\n                        setfromHour(\"\")\r\n                        setfromMinute(\"\")\r\n                        settoHour(\"\")\r\n                        settoMinute(\"\")\r\n                        setnotes(\"\")\r\n                        setdescription(\"\")\r\n                        setpriority(\"\")\r\n                        setstatus(\"\")\r\n\r\n                        seterror(\"\")\r\n                    }\r\n                }).catch(err => {\r\n                    settopic(\"\")\r\n                    setfromHour(\"\")\r\n                    setfromMinute(\"\")\r\n                    settoHour(\"\")\r\n                    settoMinute(\"\")\r\n                    setnotes(\"\")\r\n                    setdescription(\"\")\r\n                    setpriority(\"\")\r\n                    setstatus(\"\")\r\n\r\n                    seterror(\"\")\r\n                })\r\n\r\n                //clear the form if the form was submitted successfully\r\n\r\n\r\n                //------------------------------------------\r\n            } else {\r\n                seterror(\"To Time Can't be less than from time\")\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"addEvent\">\r\n            <input className=\"addEventInput\" placeholder=\"Topic\" value={topic} onChange={(event) => { event.preventDefault(); settopic(event.target.value) }}></input><br />\r\n            {\r\n                /* \r\n\r\n                <input className=\"addEventInput\" placeholder=\"Year\" value={year} onChange={(event) => { event.preventDefault(); setyear(event.target.value) }}></input><br />\r\n                <input className=\"addEventInput\" placeholder=\"Month\" value={month} onChange={(event) => { event.preventDefault(); setmonth(event.target.value) }}></input><br />\r\n                <input className=\"addEventInput\" placeholder=\"Day\" value={day} onChange={(event) => { event.preventDefault(); setday(event.target.value) }}></input><br /> \r\n                \r\n                */\r\n            }\r\n            <br />\r\n            <label className=\"addEventLabelTimeFrame\">From: </label><br />\r\n            <label className=\"addEventLabel\">Hour</label>\r\n            <select className=\"addEventInputTime\" value={fromHour} onChange={(event) => { event.preventDefault(); setfromHour(event.target.value) }}>\r\n                <option value=\"\"></option>\r\n                {\r\n                    renderHours()\r\n                }\r\n            </select>\r\n            <label className=\"addEventLabel\">Minute</label>\r\n            <select className=\"addEventInputTime\" value={fromMinute} onChange={(event) => { event.preventDefault(); setfromMinute(event.target.value) }}>\r\n                <option value=\"\"></option>\r\n                {\r\n                    renderMinutes()\r\n                }\r\n            </select><br />\r\n            <br />\r\n            <br />\r\n            <label className=\"addEventLabelTimeFrame\">To: </label><br />\r\n            <label className=\"addEventLabel\">Hour</label>\r\n            <select className=\"addEventInputTime\" value={toHour} onChange={(event) => { event.preventDefault(); settoHour(event.target.value) }}>\r\n                <option value=\"\"></option>\r\n                {\r\n                    renderHours()\r\n                }\r\n            </select>\r\n            <label className=\"addEventLabel\">Minute</label>\r\n            <select className=\"addEventInputTime\" value={toMinute} onChange={(event) => { event.preventDefault(); settoMinute(event.target.value) }}>\r\n                <option value=\"\"></option>\r\n                {\r\n                    renderMinutes()\r\n                }\r\n            </select><br />\r\n\r\n            <textarea className=\"addEventInputTextArea\" placeholder=\"Notes\" value={notes} onChange={(event) => { event.preventDefault(); setnotes(event.target.value) }}></textarea ><br />\r\n\r\n            <textarea className=\"addEventInputTextArea\" placeholder=\"Description\" value={description} onChange={(event) => { event.preventDefault(); setdescription(event.target.value) }}></textarea ><br />\r\n\r\n            <label className=\"addEventLabel\">Priority: </label>\r\n            <select className=\"addEventInputTime\" value={priority} onChange={(event) => { event.preventDefault(); setpriority(event.target.value) }}>\r\n                <option value=\"\"></option>\r\n                <option value={0}>Important</option>\r\n                <option value={1}>Normal</option>\r\n            </select><br />\r\n\r\n            <label className=\"addEventLabel\">Status: </label>\r\n            <select className=\"addEventInputTime\" value={status} onChange={(event) => { event.preventDefault(); setstatus(event.target.value) }}>\r\n                <option value=\"\"></option>\r\n                <option value={0}>Pending</option>\r\n                <option value={1}>Complete</option>\r\n            </select><br />\r\n            <div className=\"addEventSubmit\" onClick={() => { submitEvent() }}>Submit</div>\r\n            <br />\r\n            <br />\r\n            <h1>{error}</h1>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"106","severity":1,"message":"107","line":17,"column":12,"nodeType":"108","messageId":"109","endLine":17,"endColumn":17},{"ruleId":"106","severity":1,"message":"110","line":54,"column":23,"nodeType":"108","messageId":"109","endLine":54,"endColumn":35},{"ruleId":"106","severity":1,"message":"111","line":58,"column":12,"nodeType":"108","messageId":"109","endLine":58,"endColumn":22},{"ruleId":"106","severity":1,"message":"112","line":60,"column":12,"nodeType":"108","messageId":"109","endLine":60,"endColumn":24},{"ruleId":"106","severity":1,"message":"113","line":64,"column":12,"nodeType":"108","messageId":"109","endLine":64,"endColumn":27},{"ruleId":"106","severity":1,"message":"114","line":3,"column":27,"nodeType":"108","messageId":"109","endLine":3,"endColumn":36},{"ruleId":"106","severity":1,"message":"115","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":15},{"ruleId":"106","severity":1,"message":"116","line":7,"column":8,"nodeType":"108","messageId":"109","endLine":7,"endColumn":14},{"ruleId":"106","severity":1,"message":"117","line":28,"column":21,"nodeType":"108","messageId":"109","endLine":28,"endColumn":31},{"ruleId":"106","severity":1,"message":"118","line":63,"column":14,"nodeType":"108","messageId":"109","endLine":63,"endColumn":28},{"ruleId":"106","severity":1,"message":"114","line":1,"column":27,"nodeType":"108","messageId":"109","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"119","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":20},{"ruleId":"106","severity":1,"message":"115","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":15},{"ruleId":"106","severity":1,"message":"116","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":14},{"ruleId":"106","severity":1,"message":"120","line":21,"column":18,"nodeType":"108","messageId":"109","endLine":21,"endColumn":25},{"ruleId":"106","severity":1,"message":"121","line":22,"column":19,"nodeType":"108","messageId":"109","endLine":22,"endColumn":27},{"ruleId":"106","severity":1,"message":"122","line":23,"column":17,"nodeType":"108","messageId":"109","endLine":23,"endColumn":23},"no-unused-vars","'flush' is assigned a value but never used.","Identifier","unusedVar","'settodayInfo' is assigned a value but never used.","'currentDay' is assigned a value but never used.","'startOfMonth' is assigned a value but never used.","'endOfMonthIndex' is assigned a value but never used.","'useEffect' is defined but never used.","'Cookies' is defined but never used.","'moment' is defined but never used.","'setdayDate' is assigned a value but never used.","'DayInformation' is defined but never used.","'useHistory' is defined but never used.","'setyear' is assigned a value but never used.","'setmonth' is assigned a value but never used.","'setday' is assigned a value but never used."]